<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
<!ENTITY name      "community.applications">
<!ENTITY author    "Andrew Zawadzki">
<!ENTITY version   "2023.11.19">
<!ENTITY md5       "92a6a2ec642c6d731605317e4df42f56">
<!ENTITY launch    "Apps">
<!ENTITY plugdir   "/usr/local/emhttp/plugins/&name;">
<!ENTITY github    "unraid/community.applications">
<!ENTITY pluginURL "https://raw.githubusercontent.com/&github;/master/plugins/&name;.plg">
]>

<PLUGIN name="&name;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" min="6.9.0" support="https://forums.unraid.net/topic/38582-plug-in-community-applications" icon="users">

<CHANGES>
###2024.12.14
- Changed: Relocate GitHub repository to unraid
- Added: Display TailScale WebUI if present
- Changed: Rearrange coding
- Added: In case of fatal PHP error add Cancel button instead of forcing the browser tab to close
- Changed: Don't display all communication during Something Went Wrong error
</CHANGES>

<!-- The 'pre-install' script. -->
<FILE Run="/usr/bin/php">
<INLINE>
<![CDATA[
<?
  echo "Cleaning Up Old Versions\n";
  if ( is_file("/usr/local/emhttp/plugins/community.applications/scripts/removeCron.php") ) {
    exec("/usr/local/emhttp/plugins/community.applications/scripts/removeCron.php");
  }
  exec("rm -rf /usr/local/emhttp/plugins/community.applications");
  @unlink("/etc/cron.daily/updateApplications.sh");
	
	exec("rm -rf /tmp/ca_notices");

	echo "Fixing pinned apps\n";
	if ( is_file("/boot/config/plugins/community.applications/pinned_appsV2.json") ) {
	  $pin = [];
	  $original = json_decode(file_get_contents("/boot/config/plugins/community.applications/pinned_appsV2.json"),true);
		if ( is_array($original) ) {
			foreach ($original as $app) {
				$amp = strpos($app,"&");
				$new = substr($app,0,$amp).str_replace("-"," ",substr($app,$amp));
				$pin[$new]=$new;
			}
		}
		file_put_contents("/boot/config/plugins/community.applications/pinned_appsV2.json",json_encode($pin,JSON_UNESCAPED_SLASHES | JSON_PRETTY_PRINT));
	}
	
	echo "Setting up cron for background notifications\n";
	$cron = rand(0,59)." * * * * php /usr/local/emhttp/plugins/community.applications/scripts/notices.php > /dev/null 2>&1";
	@file_put_contents("/boot/config/plugins/community.applications/notification_scan.cron","\n# CRON for CA background scanning of applications\n$cron\n\n");
	exec("/usr/local/sbin/update_cron");
?>
]]>
</INLINE>
</FILE>

<FILE Run="/bin/bash">
<INLINE>
# Remove old 'source' files
rm -f $(ls /boot/config/plugins/&name;/&name;*.txz 2>/dev/null &#124; grep -v '&version;')
if [[ -d /boot/config/plugins/repo.update ]]; then rm -rf /boot/config/plugins/repo.update; fi
if [[ -d /usr/local/emhttp/plugins/repo.update ]]; then rm -rf /usr/local/emhttp/plugins/repo.update; fi
if [[ -n $(ls /boot/config/plugins/repo.update*.plg 2>/dev/null) ]]; then rm /boot/config/plugins/repo.update*.plg; fi

if [[ -e /tmp/community.applications/tempFiles/templates.json ]]; then rm /tmp/community.applications/tempFiles/templates.json; fi
/usr/local/sbin/update_cron
</INLINE>
</FILE>

<!--
The 'source' file.
-->
<FILE Name="/boot/config/plugins/&name;/&name;-&version;-x86_64-1.txz" Run="upgradepkg --install-new --reinstall">
<URL>https://raw.githubusercontent.com/&github;/master/archive/&name;-&version;-x86_64-1.txz</URL>
<MD5>&md5;</MD5>
</FILE>

<!--
The 'post-install' script
-->
<FILE Run="/bin/bash">
<INLINE>
echo "Creating Directories"
rm -rf /tmp/community.applications/tempFiles
mkdir -p /tmp/community.applications/tempFiles
mkdir -p /boot/config/plugins/community.applications
rm -rf /usr/local/emhttp/plugins/community.applications/CA.page
echo ""
# Adjust icon depending on unRaid version
echo "Adjusting icon for Unraid version"
if [[ -e /usr/local/emhttp/plugins/dynamix/styles/font-cases.ttf ]]; then sed -i 's/f0db/e942/g' /usr/local/emhttp/plugins/community.applications/Apps.page; fi
if [[ ! -e /usr/local/emhttp/plugins/dynamix/styles/font-cases.ttf ]]; then sed -i 's/e942/f0db/g' /usr/local/emhttp/plugins/community.applications/Apps.page; fi

echo ""
echo "----------------------------------------------------"
echo " &name; has been installed."
echo " Copyright 2015-2024, Andrew Zawadzki"
echo " Version: &version;"
echo "----------------------------------------------------"
echo ""
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
removepkg &name;-&version;-x86_64-1
rm -rf &plugdir;
rm -rf /boot/config/plugins/&name;
rm -rf /var/lib/docker/unraid/templates-community
/usr/local/sbin/update_cron
</INLINE>
</FILE> 
</PLUGIN>
